// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class VaultProxyDeployed extends ethereum.Event {
  get params(): VaultProxyDeployed__Params {
    return new VaultProxyDeployed__Params(this);
  }
}

export class VaultProxyDeployed__Params {
  _event: VaultProxyDeployed;

  constructor(event: VaultProxyDeployed) {
    this._event = event;
  }

  get fundDeployer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vaultProxy(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultLib(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get vaultAccessor(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get fundName(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class DispatcherEvents extends ethereum.SmartContract {
  static bind(address: Address): DispatcherEvents {
    return new DispatcherEvents("DispatcherEvents", address);
  }
}
