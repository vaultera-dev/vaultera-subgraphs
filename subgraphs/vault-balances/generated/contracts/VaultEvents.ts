// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class TrackedAssetAdded extends ethereum.Event {
  get params(): TrackedAssetAdded__Params {
    return new TrackedAssetAdded__Params(this);
  }
}

export class TrackedAssetAdded__Params {
  _event: TrackedAssetAdded;

  constructor(event: TrackedAssetAdded) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class TrackedAssetRemoved extends ethereum.Event {
  get params(): TrackedAssetRemoved__Params {
    return new TrackedAssetRemoved__Params(this);
  }
}

export class TrackedAssetRemoved__Params {
  _event: TrackedAssetRemoved;

  constructor(event: TrackedAssetRemoved) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EthReceived extends ethereum.Event {
  get params(): EthReceived__Params {
    return new EthReceived__Params(this);
  }
}

export class EthReceived__Params {
  _event: EthReceived;

  constructor(event: EthReceived) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VaultEvents extends ethereum.SmartContract {
  static bind(address: Address): VaultEvents {
    return new VaultEvents("VaultEvents", address);
  }
}
